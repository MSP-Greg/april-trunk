Patch by MSP-Greg
Use IO.copy_stream for copying files
On Windows, put temp folders in windows temp folder
diff --git a/spec/mspec/lib/mspec/helpers/fs.rb b/spec/mspec/lib/mspec/helpers/fs.rb
index fb2c0f702c..26dd821162 100644
--- a/spec/mspec/lib/mspec/helpers/fs.rb
+++ b/spec/mspec/lib/mspec/helpers/fs.rb
@@ -1,12 +1,6 @@
 # Copies a file
 def cp(source, dest)
-  File.open(dest, "wb") do |d|
-    File.open(source, "rb") do |s|
-      while data = s.read(1024)
-        d.write data
-      end
-    end
-  end
+  IO.copy_stream source, dest
 end
 
 # Creates each directory in path that does not exist.
diff --git a/spec/mspec/lib/mspec/helpers/tmp.rb b/spec/mspec/lib/mspec/helpers/tmp.rb
index 4e1273dcfe..38a6f7de71 100644
--- a/spec/mspec/lib/mspec/helpers/tmp.rb
+++ b/spec/mspec/lib/mspec/helpers/tmp.rb
@@ -1,11 +1,22 @@
-# Creates a temporary directory in the current working directory
-# for temporary files created while running the specs. All specs
-# should clean up any temporary files created so that the temp
-# directory is empty when the process exits.
+# frozen_string_literal: true
 
-SPEC_TEMP_DIR = File.expand_path(ENV["SPEC_TEMP_DIR"] || "rubyspec_temp")
+# Creates a temporary directory in the current working directory
+# (or the Windows temp directory) for temporary files created while
+# running the specs. All specs should clean up any temporary files
+# created so that the temp directory is empty when the process exits.
+
+if /mswin|mingw/ =~ RUBY_PLATFORM
+  temp_dir = ENV['TMPDIR'] || ENV['TEMP'] || ENV['TMP']
+  if temp_dir and (temp_dir = temp_dir.dup.gsub("\\", "/")) and Dir.exist?(temp_dir)
+    SPEC_TEMP_DIR = File.expand_path(ENV["SPEC_TEMP_DIR"] || "rubyspec_temp", temp_dir)
+  else
+    SPEC_TEMP_DIR = File.expand_path(ENV["SPEC_TEMP_DIR"] || "rubyspec_temp")
+  end
+else
+  SPEC_TEMP_DIR = File.expand_path(ENV["SPEC_TEMP_DIR"] || "rubyspec_temp")
+end
 
-SPEC_TEMP_UNIQUIFIER = "0"
+SPEC_TEMP_UNIQUIFIER = "0".dup
 
 SPEC_TEMP_DIR_PID = Process.pid
 
